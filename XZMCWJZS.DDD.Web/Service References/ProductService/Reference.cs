//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace XZMCWJZS.DDD.Web.ProductService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ProductService.IProductService")]
    public interface IProductService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/GetProducts", ReplyAction="http://tempuri.org/IProductService/GetProductsResponse")]
        XZMCWJZS.DDD.Domain.Model.Product[] GetProducts();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/GetProducts", ReplyAction="http://tempuri.org/IProductService/GetProductsResponse")]
        System.Threading.Tasks.Task<XZMCWJZS.DDD.Domain.Model.Product[]> GetProductsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/GetNewProducts", ReplyAction="http://tempuri.org/IProductService/GetNewProductsResponse")]
        XZMCWJZS.DDD.Domain.Model.Product[] GetNewProducts(int count);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/GetNewProducts", ReplyAction="http://tempuri.org/IProductService/GetNewProductsResponse")]
        System.Threading.Tasks.Task<XZMCWJZS.DDD.Domain.Model.Product[]> GetNewProductsAsync(int count);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/GetCategories", ReplyAction="http://tempuri.org/IProductService/GetCategoriesResponse")]
        XZMCWJZS.DDD.Domain.Model.Category[] GetCategories();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/GetCategories", ReplyAction="http://tempuri.org/IProductService/GetCategoriesResponse")]
        System.Threading.Tasks.Task<XZMCWJZS.DDD.Domain.Model.Category[]> GetCategoriesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/GetProductById", ReplyAction="http://tempuri.org/IProductService/GetProductByIdResponse")]
        XZMCWJZS.DDD.Domain.Model.Product GetProductById(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/GetProductById", ReplyAction="http://tempuri.org/IProductService/GetProductByIdResponse")]
        System.Threading.Tasks.Task<XZMCWJZS.DDD.Domain.Model.Product> GetProductByIdAsync(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/Add", ReplyAction="http://tempuri.org/IProductService/AddResponse")]
        void Add(XZMCWJZS.DDD.Domain.Model.Product aggregateRoot);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductService/Add", ReplyAction="http://tempuri.org/IProductService/AddResponse")]
        System.Threading.Tasks.Task AddAsync(XZMCWJZS.DDD.Domain.Model.Product aggregateRoot);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IProductServiceChannel : XZMCWJZS.DDD.Web.ProductService.IProductService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ProductServiceClient : System.ServiceModel.ClientBase<XZMCWJZS.DDD.Web.ProductService.IProductService>, XZMCWJZS.DDD.Web.ProductService.IProductService {
        
        public ProductServiceClient() {
        }
        
        public ProductServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ProductServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProductServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProductServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public XZMCWJZS.DDD.Domain.Model.Product[] GetProducts() {
            return base.Channel.GetProducts();
        }
        
        public System.Threading.Tasks.Task<XZMCWJZS.DDD.Domain.Model.Product[]> GetProductsAsync() {
            return base.Channel.GetProductsAsync();
        }
        
        public XZMCWJZS.DDD.Domain.Model.Product[] GetNewProducts(int count) {
            return base.Channel.GetNewProducts(count);
        }
        
        public System.Threading.Tasks.Task<XZMCWJZS.DDD.Domain.Model.Product[]> GetNewProductsAsync(int count) {
            return base.Channel.GetNewProductsAsync(count);
        }
        
        public XZMCWJZS.DDD.Domain.Model.Category[] GetCategories() {
            return base.Channel.GetCategories();
        }
        
        public System.Threading.Tasks.Task<XZMCWJZS.DDD.Domain.Model.Category[]> GetCategoriesAsync() {
            return base.Channel.GetCategoriesAsync();
        }
        
        public XZMCWJZS.DDD.Domain.Model.Product GetProductById(System.Guid id) {
            return base.Channel.GetProductById(id);
        }
        
        public System.Threading.Tasks.Task<XZMCWJZS.DDD.Domain.Model.Product> GetProductByIdAsync(System.Guid id) {
            return base.Channel.GetProductByIdAsync(id);
        }
        
        public void Add(XZMCWJZS.DDD.Domain.Model.Product aggregateRoot) {
            base.Channel.Add(aggregateRoot);
        }
        
        public System.Threading.Tasks.Task AddAsync(XZMCWJZS.DDD.Domain.Model.Product aggregateRoot) {
            return base.Channel.AddAsync(aggregateRoot);
        }
    }
}
